#include <Keyboard.h>

const int buttonPin = 3; // Pin where the button is connected
unsigned long startTime; // Track the start time for the 2-second delay
bool buttonPressed = false; // To track the button state

void setup() {
  pinMode(buttonPin, INPUT_PULLUP); // Set the button pin as input with an internal pull-up resistor
  Keyboard.begin(); // Initialize the Keyboard library
  startTime = millis(); // Record the start time
}

void loop() {
  // Check if the button is pressed
  if (digitalRead(buttonPin) == LOW && !buttonPressed) { // Button pressed (LOW state)
    buttonPressed = true; // Mark the button as pressed
    openTextEditMac(); // Execute the macOS-specific function
    startTime = millis(); // Reset the timer when the button is pressed
  }

  // Check if 2 seconds have passed without the button being pressed
  if (millis() - startTime > 2000 && !buttonPressed) {
    spamCloseTabsAndSearch(); // Execute the spam close tabs and search action
    startTime = millis(); // Reset the timer after action
  }

  // Reset the button state if the button is released
  if (digitalRead(buttonPin) == HIGH && buttonPressed) {
    buttonPressed = false; // Mark the button as released
    startTime = millis(); // Reset the timer
  }

  delay(50); // Add a short delay to stabilize readings
}

// Function to spam close tabs and open search bar
void spamCloseTabsAndSearch() {
  // ---- Windows - Close Tabs and Open Search ----
  for (int i = 0; i < 20; i++) {
    Keyboard.press(KEY_LEFT_CTRL);  // Ctrl key (Windows)
    Keyboard.press('w');           // W key (Close tab)
    delay(200);                    // Small delay between key presses
    Keyboard.releaseAll();         // Release all keys
    delay(200);                    // Short delay to simulate key hold time
  }

  delay(1000); // Pause before opening the search bar
  Keyboard.press(KEY_LEFT_GUI);  // Windows key
  Keyboard.press('s');           // S key (Search bar)
  delay(500);
  Keyboard.releaseAll();
  Keyboard.print("VIPAS CAVOLO VP 100"); // Type the message
  delay(1000);

  delay(3000); // Wait before switching to macOS

  // ---- macOS - Close Tabs and Open Spotlight Search ----
  for (int i = 0; i < 20; i++) {
    Keyboard.press(KEY_LEFT_GUI);  // Command key (macOS)
    Keyboard.press('w');           // W key (Close tab)
    delay(200);
    Keyboard.releaseAll();
    delay(200);
  }

  delay(1000); // Pause before opening Spotlight
  Keyboard.press(KEY_LEFT_GUI);  // Command key
  Keyboard.press(' ');           // Space key (Spotlight)
  delay(500);
  Keyboard.releaseAll();
  Keyboard.print("VIPAS CAVOLO VP 100"); // Type the message
  delay(1000);
}

// Function to open TextEdit and type in a message
void openTextEditMac() {
  Keyboard.press(KEY_LEFT_GUI); // Hold Command key
  Keyboard.press(' ');          // Press Space to open Spotlight
  Keyboard.releaseAll();
  delay(500);
  Keyboard.print("TextEdit");
  delay(500); // Allow time for TextEdit to appear in Spotlight
  Keyboard.press(KEY_RETURN);
  Keyboard.releaseAll();
  delay(1000); // Wait for TextEdit to open
  Keyboard.press(KEY_LEFT_GUI);
  Keyboard.press('n'); // New document
  Keyboard.releaseAll();
  delay(500);
  Keyboard.print("VIPAS CAVOLO PROJECT ADMIN PAGE. To customize this Cavolo VP100 BadUSB system, a text file will be downloaded soon.");
  delay(800);

  Keyboard.press(KEY_LEFT_GUI);
  Keyboard.press(' ');
  Keyboard.releaseAll();
  delay(500);
  Keyboard.print("Terminal");
  delay(500); // Allow time for Terminal to appear in Spotlight
  Keyboard.press(KEY_RETURN);
  Keyboard.releaseAll();
  delay(3000); // Wait for Terminal to open
  Keyboard.print("curl -O https://raw.githubusercontent.com/vipasrf/VIPAS-CAVOLO-PROJECT/refs/heads/main/CavoloVP100.md");
  delay(400);
  Keyboard.press(KEY_RETURN);
  Keyboard.releaseAll();
  delay(5000); // Wait for the file to download
  Keyboard.print("nano CavoloVP100.md");
  delay(500); // Allow time for nano to open the file
  Keyboard.press(KEY_RETURN);
  Keyboard.releaseAll();
  delay(500); // Wait for nano to open the file
  Keyboard.print("PLEASE GO TO: https://github.com/vipasrf/VIPAS-CAVOLO-PROJECT FOR FURTHER INFORMATION. BELOW IS THE SOURCE CODE.");
}
